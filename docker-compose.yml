services:
  # Django バックエンドサービス
  backend:
    build:
      context: ./backend # backendディレクトリのDockerfileを使用
      dockerfile: Dockerfile
    command: python manage.py runserver 0.0.0.0:8000 # Djangoサーバーを起動
    volumes:
      - ./backend:/app # ホストのbackendディレクトリをコンテナの/appにマウント
    ports:
      - "8000:8000" # ホストの8000番ポートをコンテナの8000番ポートにマッピング
    env_file:
      - .env.dev # 環境変数を設定
    depends_on:
      - db # dbサービスが起動してからbackendサービスを起動
    networks:
      - app_network

  # PostgreSQL データベースサービス
  db:
    image: postgres:13 # PostgreSQLの公式イメージを使用
    volumes:
      - pg_data:/var/lib/postgresql/data # 永続化のためのボリューム
    env_file:
      - .env.dev # データベースの認証情報などを設定
    networks:
      - app_network

  # React Native フロントエンドサービス
  frontend:
    build:
      context: ./frontend # frontendディレクトリのDockerfileを使用
      dockerfile: Dockerfile
    command: pnpm expo start
    volumes:
      - ./frontend:/app # ホストのfrontendディレクトリをコンテナの/appにマウント
      - /app/node_modules # node_modulesはホストからマウントしない（コンテナ内でインストール）
    ports:
      - "19000:19000" # Expo Go用のポート
      - "19001:19001" # Expo Go用のポート (開発サーバーのWeb UIなど)
      - "8081:8081"
    networks:
      - app_network
    environment:
      # React NativeからDjangoバックエンドにアクセスするためのURL
      # Docker内部ではサービス名で解決できる
      REACT_APP_API_URL: http://backend:8000

networks:
  app_network:
    driver: bridge

volumes:
  pg_data: # PostgreSQLのデータを永続化するためのボリューム